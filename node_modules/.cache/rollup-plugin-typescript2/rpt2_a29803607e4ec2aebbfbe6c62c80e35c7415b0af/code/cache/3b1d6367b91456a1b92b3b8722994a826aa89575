{"code":"import invariant from 'tiny-invariant';\r\nimport { Price } from '@uniswap/sdk-core';\r\nexport class Route {\r\n    constructor(pairs, input, output) {\r\n        this._midPrice = null;\r\n        invariant(pairs.length > 0, 'PAIRS');\r\n        const chainId = pairs[0].chainId;\r\n        invariant(pairs.every(pair => pair.chainId === chainId), 'CHAIN_IDS');\r\n        const wrappedInput = input.wrapped;\r\n        invariant(pairs[0].involvesToken(wrappedInput), 'INPUT');\r\n        invariant(typeof output === 'undefined' || pairs[pairs.length - 1].involvesToken(output.wrapped), 'OUTPUT');\r\n        const path = [wrappedInput];\r\n        for (const [i, pair] of pairs.entries()) {\r\n            const currentInput = path[i];\r\n            invariant(currentInput.equals(pair.token0) || currentInput.equals(pair.token1), 'PATH');\r\n            const output = currentInput.equals(pair.token0) ? pair.token1 : pair.token0;\r\n            path.push(output);\r\n        }\r\n        this.pairs = pairs;\r\n        this.path = path;\r\n        this.input = input;\r\n        this.output = output;\r\n    }\r\n    get midPrice() {\r\n        if (this._midPrice !== null)\r\n            return this._midPrice;\r\n        const prices = [];\r\n        for (const [i, pair] of this.pairs.entries()) {\r\n            prices.push(this.path[i].equals(pair.token0)\r\n                ? new Price(pair.reserve0.currency, pair.reserve1.currency, pair.reserve0.quotient, pair.reserve1.quotient)\r\n                : new Price(pair.reserve1.currency, pair.reserve0.currency, pair.reserve1.quotient, pair.reserve0.quotient));\r\n        }\r\n        const reduced = prices.slice(1).reduce((accumulator, currentValue) => accumulator.multiply(currentValue), prices[0]);\r\n        return (this._midPrice = new Price(this.input, this.output, reduced.denominator, reduced.numerator));\r\n    }\r\n    get chainId() {\r\n        return this.pairs[0].chainId;\r\n    }\r\n}\r\n//# sourceMappingURL=route.js.map","references":["/data0/htdocs/panfeng/uniswap-sdk/node_modules/tiny-invariant/dist/tiny-invariant.d.ts","/data0/htdocs/panfeng/uniswap-sdk/node_modules/@uniswap/sdk-core/dist/index.d.ts","/data0/htdocs/panfeng/uniswap-sdk/src/entities/pair.ts"],"map":"{\"version\":3,\"file\":\"route.js\",\"sourceRoot\":\"\",\"sources\":[\"../../../../../src/entities/route.ts\"],\"names\":[],\"mappings\":\"AAAA,OAAO,SAAS,MAAM,gBAAgB,CAAA;AACtC,OAAO,EAAY,KAAK,EAAS,MAAM,mBAAmB,CAAA;AAI1D,MAAM,OAAO,KAAK;IAMhB,YAAmB,KAAa,EAAE,KAAa,EAAE,MAAe;QA0BxD,cAAS,GAAkC,IAAI,CAAA;QAzBrD,SAAS,CAAC,KAAK,CAAC,MAAM,GAAG,CAAC,EAAE,OAAO,CAAC,CAAA;QACpC,MAAM,OAAO,GAAW,KAAK,CAAC,CAAC,CAAC,CAAC,OAAO,CAAA;QACxC,SAAS,CACP,KAAK,CAAC,KAAK,CAAC,IAAI,CAAC,EAAE,CAAC,IAAI,CAAC,OAAO,KAAK,OAAO,CAAC,EAC7C,WAAW,CACZ,CAAA;QAED,MAAM,YAAY,GAAG,KAAK,CAAC,OAAO,CAAA;QAClC,SAAS,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,aAAa,CAAC,YAAY,CAAC,EAAE,OAAO,CAAC,CAAA;QACxD,SAAS,CAAC,OAAO,MAAM,KAAK,WAAW,IAAI,KAAK,CAAC,KAAK,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC,aAAa,CAAC,MAAM,CAAC,OAAO,CAAC,EAAE,QAAQ,CAAC,CAAA;QAE3G,MAAM,IAAI,GAAY,CAAC,YAAY,CAAC,CAAA;QACpC,KAAK,MAAM,CAAC,CAAC,EAAE,IAAI,CAAC,IAAI,KAAK,CAAC,OAAO,EAAE,EAAE;YACvC,MAAM,YAAY,GAAG,IAAI,CAAC,CAAC,CAAC,CAAA;YAC5B,SAAS,CAAC,YAAY,CAAC,MAAM,CAAC,IAAI,CAAC,MAAM,CAAC,IAAI,YAAY,CAAC,MAAM,CAAC,IAAI,CAAC,MAAM,CAAC,EAAE,MAAM,CAAC,CAAA;YACvF,MAAM,MAAM,GAAG,YAAY,CAAC,MAAM,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,IAAI,CAAC,MAAM,CAAA;YAC3E,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,CAAA;SAClB;QAED,IAAI,CAAC,KAAK,GAAG,KAAK,CAAA;QAClB,IAAI,CAAC,IAAI,GAAG,IAAI,CAAA;QAChB,IAAI,CAAC,KAAK,GAAG,KAAK,CAAA;QAClB,IAAI,CAAC,MAAM,GAAG,MAAM,CAAA;IACtB,CAAC;IAID,IAAW,QAAQ;QACjB,IAAI,IAAI,CAAC,SAAS,KAAK,IAAI;YAAE,OAAO,IAAI,CAAC,SAAS,CAAA;QAClD,MAAM,MAAM,GAAgC,EAAE,CAAA;QAC9C,KAAK,MAAM,CAAC,CAAC,EAAE,IAAI,CAAC,IAAI,IAAI,CAAC,KAAK,CAAC,OAAO,EAAE,EAAE;YAC5C,MAAM,CAAC,IAAI,CACT,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,IAAI,CAAC,MAAM,CAAC;gBAC9B,CAAC,CAAC,IAAI,KAAK,CAAC,IAAI,CAAC,QAAQ,CAAC,QAAQ,EAAE,IAAI,CAAC,QAAQ,CAAC,QAAQ,EAAE,IAAI,CAAC,QAAQ,CAAC,QAAQ,EAAE,IAAI,CAAC,QAAQ,CAAC,QAAQ,CAAC;gBAC3G,CAAC,CAAC,IAAI,KAAK,CAAC,IAAI,CAAC,QAAQ,CAAC,QAAQ,EAAE,IAAI,CAAC,QAAQ,CAAC,QAAQ,EAAE,IAAI,CAAC,QAAQ,CAAC,QAAQ,EAAE,IAAI,CAAC,QAAQ,CAAC,QAAQ,CAAC,CAC9G,CAAA;SACF;QACD,MAAM,OAAO,GAAG,MAAM,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,WAAW,EAAE,YAAY,EAAE,EAAE,CAAC,WAAW,CAAC,QAAQ,CAAC,YAAY,CAAC,EAAE,MAAM,CAAC,CAAC,CAAC,CAAC,CAAA;QACpH,OAAO,CAAC,IAAI,CAAC,SAAS,GAAG,IAAI,KAAK,CAAC,IAAI,CAAC,KAAK,EAAE,IAAI,CAAC,MAAM,EAAE,OAAO,CAAC,WAAW,EAAE,OAAO,CAAC,SAAS,CAAC,CAAC,CAAA;IACtG,CAAC;IAED,IAAW,OAAO;QAChB,OAAO,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,OAAO,CAAA;IAC9B,CAAC;CACF\"}","dts":{"name":"/data0/htdocs/panfeng/uniswap-sdk/entities/route.d.ts","writeByteOrderMark":false,"text":"import { Currency, Price, Token } from '@uniswap/sdk-core';\r\nimport { Pair } from './pair';\r\nexport declare class Route<TInput extends Currency, TOutput extends Currency> {\r\n    readonly pairs: Pair[];\r\n    readonly path: Token[];\r\n    readonly input: TInput;\r\n    readonly output: TOutput;\r\n    constructor(pairs: Pair[], input: TInput, output: TOutput);\r\n    private _midPrice;\r\n    get midPrice(): Price<TInput, TOutput>;\r\n    get chainId(): number;\r\n}\r\n"}}
